# Copyright 2011,2012,2016 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-rwt
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

include_directories(${Boost_INCLUDE_DIR} ${IIO_INCLUDE_DIRS} ${AD9361_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})

list(APPEND rwt_sources
    rwt_base_block_impl.cc
    rwt_sink_impl.cc
    base_device_common.cc
    base_device_sink.cc
    base_device_source.cc
    rwt_source_impl.cc
    rwt_source_s16_impl.cc
    time_helper.cc
    rwt_registers_common.cc
    cic_filter_fpga.cc
)

install(FILES
    base_device_common.h
    base_device_sink.h
    base_device_source.h
    cic_filter_fpga.h
    common_registers.h
    common_tag_types.h
    rwt_base_block_impl.h
    rwt_registers_common.h
    time_helper.h DESTINATION include/rwt
)


set(rwt_sources "${rwt_sources}" PARENT_SCOPE)
if(NOT rwt_sources)
	MESSAGE(STATUS "No C++ sources... skipping lib/")
	return()
endif(NOT rwt_sources)

add_library(gnuradio-rwt SHARED ${rwt_sources})
target_link_libraries(gnuradio-rwt gnuradio::gnuradio-runtime gnuradio::gnuradio-pmt
        ${Boost_LIBRARIES}
        ${IIO_LIBRARIES}
        ${AD9361_LIBRARIES}
        ${ZEROMQ_LIBRARIES}
        ${GPIOD_LIBRARIES}
        ${VOLK_LIBRARIES})
target_include_directories(gnuradio-rwt
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/>
    PUBLIC $<INSTALL_INTERFACE:include>
  )

set_target_properties(gnuradio-rwt PROPERTIES DEFINE_SYMBOL "gnuradio_rwt_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-rwt PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-rwt RUNTIME_COMPONENT "rwt_runtime" DEVEL_COMPONENT "rwt_devel")

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_rwt_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-rwt)

if(NOT test_rwt_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_rwt_sources)

foreach(qa_file ${test_rwt_sources})
    GR_ADD_CPP_TEST("rwt_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)

GR_ADD_TEST(test_rwt test-rwt)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")
